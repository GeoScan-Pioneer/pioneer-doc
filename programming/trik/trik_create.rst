Создание программы в TRIK Studio
================================
При первом запуске программы создайте новый проект (кнопка в левом верхнем углу). Чтобы начать создавать программу, достаточно перетащить нужные блоки действия из "Палитры" на диаграмму поведения робота, а затем соединить их между собой.

**Основы работы с TRIK Studio**

* Каждая программа должна содержать блоки "Начало" и "Конец". В случае ветвления программы каждая ветвь должна либо вернуться в основное дерево, либо заканчиваться блоком "конец".
* Для соединения двух блоков наведите курсор мыши на первый, нажмите и удерживайте **правую** кнопку мыши, протяните линию до второго и отпустите. Появившаяся на диаграмме стрелка означает, что два блока логически связаны. Также можно выбрать нужный блок и захватить **левой** кнопкой мыши появившийся справа от него маркер, протянув до следующего блока и отпустив.
* Настроить выбранный блок можно в окне "Редактор свойств". 
* Чтобы удалить ненужный блок, выберите его щелчком левой кнопки мыши и нажмите del.
* Если нужно выбрать сразу несколько блоков, их можно обвести рамкой, зажав левую кнопку мыши и потянув курсор. Также можно выделять блоки по одному, зажав ctrl.
* На диаграмме не должно оставаться красных стрелок и неподключенных блоков. Для удобства старайтесь выстраивать диаграмму в направлении слева направо и сверху вниз. 
* Для удобства и быстроты работы изучите список "горячих клавиш" в разделе "Настройки". Также полезно прочитать раздел **Помощь (F1)**

**Блоки, используемые для программирования "Пионера":**

* **Условие** - позволяет создать два сценария действия "Пионера" в зависимости от заданного логического условия. У блока должны быть две исходящие связи, в одной из которых в редакторе свойств должно быть назначено значение параметра "условие" (истина или ложь)
* **Конец условия** - обозначает слияние двух веток условного оператора. Никаких действий не выполняет, но полезен для обеспечения структурности программы.
* **Инициализация переменной** - позволяет объявить новую переменную. В редакторе свойств или прямо на диаграмме задается имя переменной и ее значение.
* **Случайное число** - присваивает выбранной переменной случайное значение из выбранного диапазона. 
* **Комментарий** - позволяет включить в программу текстовые пояснения, упрощающие понимание структуры участка или конкретного блока. 
* **Таймер** - задает время ожидания перед выполнением следующего блока программы в миллисекундах.
* **Взлет**, **Посадка**  - команды начала и завершения полета.
* **Лететь в точку** - указывает координаты точки, в которую полетит квадрокоптер. Координаты вводятся без точек и запятых в строки широты и долготы. Строка "высота" отображает расстояние (в метрах) от поверхности в конечной точке полета.
* **Лететь в точку(ЛК)** - команда аналогична предыдущей, но точка назначения задается в локальных координатах. За точку отсчета (0,0,0) принимается место взлета. Значения координат задаются в метрах. 
* **Светодиод** - управляет работой светодиодов на плате "Пионера". Меняя значения для каждого цвета, можно зажигать светодиоды по одному или в различных комбинациях. В паре с блоком "Таймер" можно задать длительность свечения.
* **Магнит** - управляет работой модуля захвата груза (:doc:`/modules/cargo`). Чтобы включить магнит, поставьте галочку в чекбоксе значения свойств блока.
* **Команда** - позволяет выполнить написанную в свойствах команду. Для написания команды используется язык Lua (:doc:`/programming/lua/lua_main`). Для выполнения команды поставьте галочку в чекбоксе.
* **Рыскание** - управляет изменением направления полета "Пионера" вокруг вертикальной оси. Для поворота по часовой стрелке задайте значение угла в градусах со знаком "минус".

Комбинируя блоки между собой и создавая связи меду ними, вы сможете создать любую полетную программу для "Пионера"



