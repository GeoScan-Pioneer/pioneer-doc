.. role:: python(code)
	:language: python
	:class: highlight

Управление кнопками клавиатуры
==============================

Пример кода для запуска двух квадрокоптеров и управления ими через кнопки клавиатуры.

.. include:: multiple_drones.py
	:code: python

В глобальных переменных :python:`coord_x`, :python:`coord_y`, :python:`coord_z` хранятся координаты точки, в которую мы отправим наш квадрокоптер. В точку с этими координатами мы отправим оба квадрокоптера, но поскольку у каждого дрона своя система координат, зависящая от того, где он взлетал, то в пространстве дроны окажутся в разных местах.

Переменная :python:`yaw` отвечает за поворот дрона (рысканье).

Переменные :python:`increment` и :python:`yaw_increment` отвечают за то, на сколько будут увеличиваться/уменьшаться переменные координат и рысканья за одно нажатие кнопки.

|

:python:`import keyboard` импортирует библиотеку `keyboard <https://github.com/boppreh/keyboard>`__. В данном коде она используется, чтобы вызывать нужные действия при нажатии кнопок клавиатуры.

.. code-block:: python

	pioneer_mini1 = Pioneer(pioneer_ip='192.168.147.141')
	pioneer_mini2 = Pioneer(pioneer_ip='192.168.147.10')

Создаём экзкмпляр класса для каждого дрона. Не забудьте указать IP адресс именно ваших дронов.

.. code-block:: python

	keyboard.on_press_key('1', arm)

Используем библиатеку **keyboard**, чтобы вызывать функцию :python:`arm()` каждый раз при нажатии кнопки '1'. Аналогично вешаем другие функции на нужные кнопки.

.. code-block:: python

	def arm(event):
		pioneer_mini1.arm()
		pioneer_mini2.arm()

В самой же функции :python:`arm()` каждому дрону отправляется команда :code:`arm`. В некоторых других функциях помимо отправки команды на дрон происходит пересчёт переменнных. Например:

.. code-block:: python

	def right(event):
		global coord_x
		coord_x += increment
		pioneer_mini1.go_to_local_point(x=coord_x, y=coord_y, z=coord_z, yaw=yaw)
		pioneer_mini2.go_to_local_point(x=coord_x, y=coord_y, z=coord_z, yaw=yaw)

команда :python:`global coord_x` нужна для того, чтобы обозначить, что переменная :python:`coord_x` глобальная. Затем увеличиваем координату **x** на заданную величину и отправляем оба дрона в новую точку.

|

Если вы запустите данный код, то заметите, что взлетаю и садятся дроны не одновременно, а последовательно. И при полёте в точку они начинают лететь с некоторой задержкой. Это происходит, потому что команды на квадрокоптеры отправляются последовательно. Если хотеть, чтобы дроны летали одновременно, команды надо отправлять в разных потоках.

.. Читайте :doc:`аsync_code`