Описание функций pioneer_sdk
============================

На данной странице разобраны методы библиотеки pioneer_sdk.

Примеры скриптов можно найти по `ссылке <https://github.com/geoscan/pioneer_sdk/tree/master/examples>`__.

Страница по настройке среды программирования: :doc:`python_environment`

.. warning:: Страница находится на обновлении.


.. contents::
   :local:

.. highlight:: python

..  tip:: Значения аргументов, представленных в описании метода являются стандартными, то есть если написано: led_control(led_id=255, r=0, g=0, b=0)
          то в программе его можно вызывать как led_control() - эквивалент надписи выше. Или например led_control(r=255) — тогда частично будут задействованы стандартные значения.

Создание объекта класса:

.. class:: Pioneer

.. py:class:: pioneer = Pioneer(pioneer_ip='192.168.4.1', pioneer_video_port=8888, pioneer_video_control_port=8888, pioneer_mavlink_port=8001, logger=True)

	:аргументы:  *pioneer_ip* — адрес подключения к пионеру,
                 *pioneer_video_port* — порт для передачи видеопотока,
                 *pioneer_video_control_port* — порт для запуска передачи видеопотока,
                 *pioneer_mavlink_port* - порт для передачи команд управления,
                 *logger* — флаг, отвечающий за вывод отладочной информации в терминал принимает значения True/False
	:return: объект класса Pioneer

	Cоздаёт объект класса Pioneer

Описан


.. py:classmethod:: get_raw_video_frame()

	:аргументы: нет
	:return: массив байт фрейма

	Возвращает массив байт представляющий собой *jpg* фрейм, может быть выведен на экран средствами к примеру opencv (см. примеры)

.. py:classmethod:: arm()

	:аргументы: нет
	:return: нет

	Заводит моторы квадрокоптера.

.. py:classmethod:: disarm()

	:аргументы: нет
	:return: нет

    Глушит моторы квадрокоптера.

.. py:classmethod:: takeoff()

	:аргументы:  явных аргументов нет, высота взлета задаётся параметром автопилота *Flight_com_takeoffAlt=x*, где x-высота взлета в метрах.
	:return: нет

    Даёт команду на взлет квадрокоптера.

.. py:classmethod:: land()

	:аргументы: нет
	:return: нет

	Выполняет команду на посадку

.. py:classmethod:: lua_script_control(input_state=“Stop“)

	:аргументы: *input_state* - состояние запуска скрипта, принимает значения *«Start»* и *«Stop»*
	:return: нет

	Управляет выполнением заранее загруженного на коптер lua скрипта.

.. py:classmethod:: led_control(led_id=255, r=0, g=0, b=0)

    :аргументы:  *led_id* - номер светодиода для управления 0-3 — светодиоды от 1 до 4, 255 — все светодиоды,
                 *r*, *g*, *b* — каналы по управлению красным зелёным и синим свечением светодиода 0-255 - интенсивность соответствующего канала.

    Метод для управления программируемыми светодиодами квадрокоптера.

.. py:classmethod:: go_to_local_point(x=None, y=None, z=None, yaw=None)

	:аргументы: *x*, *y*, *z* - координаты точки, в метрах.
	            *yaw* - угол рысканья, задается в радианах.
	:return: нет

	Отправляет квадрокоптер с заданными координатами относительно системы 	координат, связанной с точкой взлета.

.. py:classmethod:: point_reached(blocking=False)

	:аргументы: *blocking* - флаг, блокирующий выполнение основной программы, пока метод не вернёт True, принимает значение *True/False*
	:return: *True, False*

	Метод возвращает True, когда выполнится последняя команда 	go_to_local_point().

.. py:classmethod:: get_dist_sensor_data(blocking=False)

	:аргументы: *blocking* - флаг, блокирующий выполнение основной программы, пока метод не вернёт данные с дальномер, принимает значение *True/False*
	:return: None если данных нет, либо сигнал с дальномера в метрах

	Позволяет получить показания с дальномера.

..
    пример подключения кода из сабмодуля
     literalinclude:: ./pioneer_sdk/pioneer_sdk/piosdk.py
        language: python
        pyobject: Pioneer.get_raw_video_frame